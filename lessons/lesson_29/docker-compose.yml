version: "3"
# Версия API для docker compose

services:

  pg:
    image: postgres # если локально не находит, пойдет в docker hub и оттуда скачает

#    build: ./path/to/dockerfile
#  будет искать Dockerfile в указанной директории и использовать его для сборки образа

    environment: # переменные окружения
      POSTGRES_DB: blog
      POSTGRES_USER: user
      POSTGRES_PASSWORD: example
    volumes: # для явного указания где будут храниться данные
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d blog -U user"]
      interval: 5s
      timeout: 3s
      retries: 5


  app:
    build:
      dockerfile: ./build/Dockerfile
      context: ./
    environment:
      DATABASE_URI: "postgresql+psycopg://user:example@localhost:5432/blog"
    command:
      - flask
      - run

    ports:
      - "5001:5000"
    entrypoint:
      - bash
      - "entrypoint.sh"
    network_mode: host
    depends_on:
      pg:
        condition: service_healthy

volumes:
  db-data:
